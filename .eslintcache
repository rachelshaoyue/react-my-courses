[{"C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\index.js":"1","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\App.js":"3","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\MainPage.js":"4","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\AcademicYear.js":"5","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\Study.js":"6","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\Class.js":"7"},{"size":628,"mtime":1607640304826,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":528,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2116,"mtime":1607727008970,"results":"12","hashOfConfig":"9"},{"size":2333,"mtime":1607727008979,"results":"13","hashOfConfig":"9"},{"size":1887,"mtime":1607724628462,"results":"14","hashOfConfig":"9"},{"size":2480,"mtime":1607727763536,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1uwbj2i",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport MainPage from './MainPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*<App />*/}\n    <MainPage/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["35","36"],"C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\App.js",[],"C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\MainPage.js",[],"C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\AcademicYear.js",["37"],"import React, {Component} from 'react';\r\nimport {Nav, NavItem, NavLink} from 'reactstrap';\r\n\r\nclass AcademicYear extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    updateTerms = (apiResponse) => {\r\n        let i;\r\n        let yearList = [];\r\n        let semesterList = [];\r\n\r\n        for(i = 0; i < apiResponse[0].length; i++){\r\n            yearList.push(apiResponse[0][i]);\r\n        }\r\n\r\n        for(i = 0; i < apiResponse[1].length; i++){\r\n            semesterList.push(apiResponse[1][i]);\r\n        }\r\n        this.props.updateTerms(yearList, semesterList);\r\n    };\r\n\r\n    fetchTerms = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\"\r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n        fetch('/termData')\r\n            .then(\r\n                response => response.json()\r\n            )//The promise response is returned, then we extract the json data\r\n            .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                {\r\n                    this.updateTerms(jsonOutput)\r\n                }\r\n            );\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.fetchTerms();\r\n    }\r\n\r\n    render() {\r\n        let semesters = this.props.semesters.map(semester => {\r\n            return (\r\n                <NavItem>\r\n                    <NavLink className=\"semester-item\" href=\"#\">{semester}</NavLink>\r\n                </NavItem>\r\n            )\r\n        });\r\n        let years = this.props.years.map(year => {\r\n            const link = '#' + year;\r\n            return (\r\n                <NavItem>\r\n                    <div className=\"dropdown-semesters\">\r\n                        <NavLink className=\"year-item\" href={link}>{year}</NavLink>\r\n                        <Nav vertical>\r\n                            {semesters}\r\n                        </Nav>\r\n                    </div>\r\n                </NavItem>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"AcademicYear\">\r\n                <Nav vertical>\r\n                    {years}\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AcademicYear;","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\Study.js",["38","39","40","41","42","43"],"import React, {Component} from 'react';\r\n\r\nclass Study extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            studies: []\r\n        }\r\n    }\r\n\r\n    updateStudies = (apiResponse) => {\r\n        let i;\r\n        let studyList = [];\r\n        for(i = 0; i < apiResponse.length; i++){\r\n            let dict = {\r\n                \"degree\": apiResponse[i][1],\r\n                \"required\": apiResponse[i][2],\r\n                \"completed\": apiResponse[i][3],\r\n                \"needed\": apiResponse[i][4]\r\n            };\r\n            studyList.push(dict);\r\n        }\r\n\r\n        this.setState({studies: studyList})\r\n    };\r\n\r\n    fetchStudies = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\"\r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n        fetch('/studyData')\r\n            .then(\r\n                response => response.json()\r\n            )//The promise response is returned, then we extract the json data\r\n            .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                {\r\n                    this.updateStudies(jsonOutput)\r\n                }\r\n            );\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.fetchStudies();\r\n    }\r\n    render() {\r\n        let studies = this.state.studies.map(study => {\r\n            return (\r\n                <div>\r\n                    {study.degree}<br/>\r\n                    Credits\r\n                    <ul>\r\n                        <li>Required: {study.required}</li>\r\n                        <li>Completed: {study.completed}</li>\r\n                        <li>Needed: {study.needed}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"Study\">\r\n                {studies}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Study;","C:\\Users\\USER\\Documents\\My Stuff\\My Git Repositories\\react-my-courses\\src\\Class.js",["44","45"],{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":11},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":5,"column":5,"nodeType":"56","messageId":"57","endLine":7,"endColumn":6},{"ruleId":"46","severity":1,"message":"58","line":2,"column":9,"nodeType":"48","messageId":"49","endLine":2,"endColumn":18},{"ruleId":"46","severity":1,"message":"59","line":2,"column":20,"nodeType":"48","messageId":"49","endLine":2,"endColumn":23},{"ruleId":"46","severity":1,"message":"60","line":2,"column":25,"nodeType":"48","messageId":"49","endLine":2,"endColumn":28},{"ruleId":"46","severity":1,"message":"61","line":2,"column":30,"nodeType":"48","messageId":"49","endLine":2,"endColumn":33},{"ruleId":"46","severity":1,"message":"62","line":2,"column":35,"nodeType":"48","messageId":"49","endLine":2,"endColumn":42},{"ruleId":"46","severity":1,"message":"63","line":2,"column":44,"nodeType":"48","messageId":"49","endLine":2,"endColumn":51},{"ruleId":"46","severity":1,"message":"64","line":2,"column":15,"nodeType":"48","messageId":"49","endLine":2,"endColumn":26},{"ruleId":"46","severity":1,"message":"65","line":2,"column":61,"nodeType":"48","messageId":"49","endLine":2,"endColumn":73},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'CardColumns' is defined but never used.","'CardSubtitle' is defined but never used.","no-global-assign","no-unsafe-negation"]