{"version":3,"sources":["reportWebVitals.js","AcademicYear.js","Study.js","Class.js","MainPage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AcademicYear","props","updateTerms","apiResponse","i","yearList","semesterList","length","push","fetchTerms","fetch","response","json","jsonOutput","this","years","map","year","link","NavItem","className","NavLink","href","Nav","vertical","semesters","semester","Component","Study","updateStudies","studyList","dict","setState","studies","fetchStudies","state","study","degree","required","completed","needed","Class","updateClasses","classList","courses","fetchClasses","course","Card","CardHeader","name","units","CardBody","CardTitle","description","CardText","grade","noClasses","MainPage","bind","classes","id","Row","Col","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7589e3f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\r\nimport {Nav, NavItem, NavLink} from 'reactstrap';\r\n\r\nclass AcademicYear extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    updateTerms = (apiResponse) => {\r\n        let i;\r\n        let yearList = [];\r\n        let semesterList = [];\r\n\r\n        for(i = 0; i < apiResponse[0].length; i++){\r\n            yearList.push(apiResponse[0][i]);\r\n        }\r\n\r\n        for(i = 0; i < apiResponse[1].length; i++){\r\n            semesterList.push(apiResponse[1][i]);\r\n        }\r\n        this.props.updateTerms(yearList, semesterList);\r\n    };\r\n\r\n    fetchTerms = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\"\r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n        fetch('/termData')\r\n            .then(\r\n                response => response.json()\r\n            )//The promise response is returned, then we extract the json data\r\n            .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                {\r\n                    this.updateTerms(jsonOutput)\r\n                }\r\n            );\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.fetchTerms();\r\n    }\r\n\r\n    render() {\r\n        let years = this.props.years.map(year => {\r\n            const link = '#' + year;\r\n            return (\r\n                <NavItem>\r\n                    <div className=\"dropdown-semesters\">\r\n                        <NavLink className=\"year-item\" href={link}>{year}</NavLink>\r\n                        <Nav vertical>\r\n                            {this.props.semesters.map(semester => {\r\n                                const link = \"#\" + year + \"_\" + semester;\r\n                                return (\r\n                                    <NavItem>\r\n                                        <NavLink className=\"semester-item\" href={link}>{semester}</NavLink>\r\n                                    </NavItem>\r\n                                )\r\n                            })}\r\n                        </Nav>\r\n                    </div>\r\n                </NavItem>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"AcademicYear\">\r\n                <Nav vertical>\r\n                    {years}\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AcademicYear;","import React, {Component} from 'react';\r\n\r\nclass Study extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            studies: []\r\n        }\r\n    }\r\n\r\n    updateStudies = (apiResponse) => {\r\n        let i;\r\n        let studyList = [];\r\n        for(i = 0; i < apiResponse.length; i++){\r\n            let dict = {\r\n                \"degree\": apiResponse[i][1],\r\n                \"required\": apiResponse[i][2],\r\n                \"completed\": apiResponse[i][3],\r\n                \"needed\": apiResponse[i][4]\r\n            };\r\n            studyList.push(dict);\r\n        }\r\n\r\n        this.setState({studies: studyList})\r\n    };\r\n\r\n    fetchStudies = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\"\r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n        fetch('/studyData')\r\n            .then(\r\n                response => response.json()\r\n            )//The promise response is returned, then we extract the json data\r\n            .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                {\r\n                    this.updateStudies(jsonOutput)\r\n                }\r\n            );\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.fetchStudies();\r\n    }\r\n    render() {\r\n        let studies = this.state.studies.map(study => {\r\n            return (\r\n                <div>\r\n                    {study.degree}<br/>\r\n                    Credits\r\n                    <ul>\r\n                        <li>Required: {study.required}</li>\r\n                        <li>Completed: {study.completed}</li>\r\n                        <li>Needed: {study.needed}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"Study\">\r\n                {studies}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Study;","import React, {Component} from 'react';\r\nimport {Card, CardHeader, CardBody, CardTitle, CardText} from 'reactstrap';\r\n\r\nclass Class extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: [],\r\n        };\r\n    }\r\n\r\n    updateClasses = (apiResponse) => {\r\n        let i;\r\n        let classList = [];\r\n        if(apiResponse.length === 0){\r\n            this.setState({courses: [\"No Courses or Co-op\"]})\r\n        }\r\n\r\n        for(i = 0; i < apiResponse.length; i++){\r\n            let dict = {\r\n                \"name\": apiResponse[i][0],\r\n                \"description\": apiResponse[i][1],\r\n                \"units\": apiResponse[i][2],\r\n                \"grade\": apiResponse[i][3],\r\n                \"semester\": apiResponse[i][4],\r\n                \"year\": apiResponse[i][5],\r\n                \"study\": apiResponse[i][6]\r\n            };\r\n            classList.push(dict);\r\n        }\r\n\r\n        this.setState({courses: classList});\r\n    };\r\n\r\n    fetchClasses = (year, semester) => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\"\r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n        fetch(`/classData/${year}/${semester}`)\r\n            .then(\r\n                response => response.json()\r\n            )//The promise response is returned, then we extract the json data\r\n            .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                {\r\n                    this.updateClasses(jsonOutput)\r\n                }\r\n            );\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.fetchClasses(this.props.year, this.props.semester);\r\n    }\r\n\r\n    render() {\r\n        let courses = this.state.courses.map(course => {\r\n            return(\r\n                <Card>\r\n                    <CardHeader>{course.name} ({course.units})</CardHeader>\r\n                    <CardBody>\r\n                        <CardTitle>{course.description}</CardTitle>\r\n                        <CardText>{course.grade}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n        )\r\n        });\r\n\r\n        let noClasses = <p className=\"none\">No Courses or Co-op</p>;\r\n        return (\r\n            <div className=\"Class\">\r\n                {\r\n                    (this.state.courses.length === 0)\r\n                    ? noClasses\r\n                    : courses\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Class;","import React, {Component} from 'react';\r\nimport {Row, Col} from 'reactstrap';\r\nimport AcademicYear from \"./AcademicYear\";\r\nimport Study from \"./Study\";\r\nimport Class from \"./Class\";\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            years: [],\r\n            semesters: []\r\n        };\r\n\r\n        this.updateTerms = this.updateTerms.bind(this);\r\n    }\r\n\r\n    updateTerms = (yearList, semesterList) => {\r\n        this.setState({\r\n            years: yearList,\r\n            semesters: semesterList\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        let classes = this.state.years.map (year => {\r\n            return (\r\n                <div>\r\n                    <h2 id={year}>{year}</h2>\r\n                    {this.state.semesters.map(semester => {\r\n                        const link = year + \"_\" + semester;\r\n                        return (\r\n                            <div>\r\n                                <h4 id={link}>{semester}</h4>\r\n                                <Class year={year} semester={semester}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"MainPage\">\r\n                <h1>My Courses</h1>\r\n                <Row>\r\n                    <Col className=\"navbar-col\" xs=\"3\">\r\n                        <AcademicYear updateTerms={this.updateTerms} years={this.state.years} semesters={this.state.semesters}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Study/>\r\n                        <Row className=\"gpa\">\r\n                            <div>Cumulative GPA: 3.89/4.0</div>\r\n                        </Row>\r\n                        <Row className=\"classes\">\r\n                            {classes}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <footer>\r\n                    Copyright &#169; 2021<br/> Rachel Taylor\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport MainPage from './MainPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}